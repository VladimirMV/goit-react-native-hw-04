import React, { useState } from 'react';
import { View, StyleSheet, Text, TouchableOpacity } from 'react-native';
import MapView, { Marker } from 'react-native-maps';

const MapExample = () => {
  const initialRegion = {
    latitude: 37.78825, // Replace with your initial latitude
    longitude: -122.4324, // Replace with your initial longitude
    latitudeDelta: 0.0922,
    longitudeDelta: 0.0421,
  };

  const [showMarkerLocation, setShowMarkerLocation] = useState(false);
  const [markerLocation, setMarkerLocation] = useState(null);

  const handleMarkerPress = (event) => {
    const { coordinate } = event.nativeEvent;
    setShowMarkerLocation(true);
    setMarkerLocation(coordinate);
  };

  return (
    <View style={styles.container}>
      <MapView style={styles.map} initialRegion={initialRegion}>
        {showMarkerLocation && markerLocation && (
          <Marker coordinate={markerLocation} onPress={handleMarkerPress} />
        )}
      </MapView>

      {showMarkerLocation && markerLocation && (
        <View style={styles.markerInfo}>
          <Text style={styles.markerInfoText}>
            Latitude: {markerLocation.latitude}
          </Text>
          <Text style={styles.markerInfoText}>
            Longitude: {markerLocation.longitude}
          </Text>
          <TouchableOpacity
            style={styles.closeButton}
            onPress={() => setShowMarkerLocation(false)}
          >
            <Text style={styles.closeButtonText}>Close</Text>
          </TouchableOpacity>
        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  map: {
    flex: 1,
    width: '100%',
  },
  markerInfo: {
    position: 'absolute',
    bottom: 16,
    left: 16,
    right: 16,
    backgroundColor: 'white',
    borderRadius: 8,
    padding: 8,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.3,
    shadowRadius: 2,
    elevation: 2,
  },
  markerInfoText: {
    fontSize: 16,
    marginBottom: 4,
  },
  closeButton: {
    backgroundColor: 'red',
    padding: 8,
    borderRadius: 8,
    alignSelf: 'flex-end',
  },
  closeButtonText: {
    color: 'white',
    fontWeight: 'bold',
  },
});

export default MapExample;
Step 4: Save the changes and run the application.

bash
Copy code
npx react-native run-android  # For Android
npx react-native run-ios      # For iOS
This app will display a map with a marker icon. When you press the marker icon, it will show a view at the bottom of the screen with the latitude and longitude of the marker. You can close this view by pressing the "Close" button.

Please note that you need to replace the initial latitude and longitude (latitude and longitude in initialRegion) with the desired location. Additionally, ensure you have set up the necessary permissions and API keys for using maps in your application.

Keep in mind that this is a basic example, and you can customize and expand it according to your specific requirements and styling preferences.